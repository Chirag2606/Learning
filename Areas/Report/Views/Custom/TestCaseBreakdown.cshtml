@using Cyara.Domain.Types.Common
@using Cyara.Domain.Types.Plan
@using Cyara.Shared.Extensions
@using Cyara.Shared.Types.ReportSchedule
@using Cyara.Shared.Types.TestCase
@using Cyara.Shared.Web.Extensions
@using Cyara.Shared.Web.Types.Constants
@using Cyara.Web.Common.Extensions
@using Cyara.Web.Portal.Areas.Report.Extensions
@using Cyara.Web.Portal.Core.Extensions
@using Cyara.Web.Portal.Core.SiteMap
@using Cyara.Web.Portal.Models
@using MvcSiteMapProvider.Web.Html
@model Cyara.Web.Portal.Areas.Report.Models.TestCaseBreakdownViewModel

@{
    ViewBag.Title = Html.Resource("Title");
}

@helper RenderDisabledAudioDownloadLink()
{
    Html.RenderPartial("RecordingNotAvailable");
}

@section Head
{
    <script>
        var defaultDownloadTitle = '@Html.GlobalResource(Model.MediaType == MediaType.Voice ? "Download" : "Play")';

        function downloadTitle(mediaFile) {
            return mediaFile ? mediaFile : defaultDownloadTitle;
        }
    </script>
}

@section PageHead
{
    @Html.PageHeader(Model.ReportName)
    @Html.RenderReportHint(Model.MediaType)
}

@section PageHeadRight
{
    <div class="btn-group">
        <a href="#" class="btn js-export" data-type="@CustomReportExportType.Xls">@Html.Resource("Export")</a>
        <button data-toggle="dropdown" tabindex="-1" class="btn dropdown-toggle"><span class="caret"></span></button>
        <ul class="dropdown-menu pull-right">
            <li class="lnk"><button id="btnExportPDF" tabindex="-1" class="js-export" data-type="@CustomReportExportType.Pdf">@CustomReportExportType.Pdf.ToLabel()</button></li>
            <li class="lnk"><button id="btnExportXLS" tabindex="-1" class="js-export" data-type="@CustomReportExportType.Xls">@CustomReportExportType.Xls.ToLabel()</button></li>
        </ul>
    </div>

    <div class="textright">&nbsp;</div>
    @{
        Html.RenderPartial("ServerTime");
    }
}

@section Breadcrumbs
{
    @Html.MvcSiteMap().GenerateBreadcrumbs(new[] { Url.Action("Index"), Url.Action("Edit", new { id = "" }) + "?id=" + @Model.ReportId, Url.Action("TestCaseBreakdown", new { id = "" }) })
}

@section PageContent
{
    <form method="POST" id="pulsedetailform">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.MediaType)
        @Html.HiddenFor(m => m.ResultFilter)
        @Html.HiddenFor(m => m.ViewLoaded)
        @Html.HiddenFor(m => m.TestCaseName)
        @Html.HiddenFor(m => m.FolderPath)
        <div class="overlap">
            <table class="table truncated squished">
                <colgroup>
                    <col />
                    <col />
                </colgroup>
                <thead>
                    <tr>
                        <th>@Html.GlobalResource("TableHeading_TestCase")</th>
                        <th>@Html.GlobalResource("TableHeading_Folder")</th>
                    </tr>
                </thead>
                <tbody>
                    <tr class="loud">
                        <td class="truncate" id="tcName">@Model.TestCaseName</td>
                        <td class="truncate" id="tcFolderPath">@Model.FolderPath</td>
                    </tr>
                    <tr class="whisper">
                        <td></td>
                        <td></td>
                    </tr>
                </tbody>
            </table>
            <div class="boxed top-gap-small">
                <div class="row-fluid">
                    <div class="span7">
                        @if (Model.TestResultSummaries != null)
                        {
                            <table id="PulseSummaryData" style="display: none" data-calls-label="@Html.ReportingGlobalResource("TotalCalls", "TotalSessions")">
                                @foreach (var summary in Model.TestResultSummaries)
                                {
                                    <tr>
                                        <th scope="row" data-type="label">@summary.ResultType.ToLabel()</th>
                                        <td data-type="data">@summary.Number</td>
                                        <td data-type="colourCode" class="legend-colour label @summary.ResultType.ToString().ToLower()"></td>
                                    </tr>
                                }
                            </table>
                            <div class="pull-right">
                                <table class="legend-grid">
                                    @foreach (var summary in Model.TestResultSummaries)
                                    {
                                        <tr>
                                            <td data-type="colour" title="@summary.Percent%"><span class="@summary.ResultType.ToString().ToLower() label legend-colour">&nbsp;</span></td>
                                            <td data-type="label" title="@summary.Percent%">@summary.ResultType.ToLabel()</td>
                                        </tr>
                                    }
                                </table>
                            </div>
                        }
                        <div id="PulseSummaryDataArea" style="width: 350px;"></div>
                    </div>
                </div>
            </div>
            <div class="boxed-divider"></div>
            <div class="boxed">

                <div class="radiotabs btn-group" data-toggle="buttons-radio">
                    <button name="@Html.NameFor(m => m.ResultFilter)" value="@ResultFilter.All" class="btn @Html.RenderConditional(Model.ResultFilter == ResultFilter.All, new HtmlString("active"), null)">@Html.GlobalResource("All")</button>
                    <button name="@Html.NameFor(m => m.ResultFilter)" value="@ResultFilter.Success" class="btn @Html.RenderConditional(Model.ResultFilter == ResultFilter.Success, new HtmlString("active"), null)">@Html.GlobalResource("Success")</button>
                    <button name="@Html.NameFor(m => m.ResultFilter)" value="@ResultFilter.Satisfactory" class="btn @Html.RenderConditional(Model.ResultFilter == ResultFilter.Satisfactory, new HtmlString("active"), null)">@Html.GlobalResource("Satisfactory")</button>
                    <button name="@Html.NameFor(m => m.ResultFilter)" value="@ResultFilter.Unsuccessful" class="btn @Html.RenderConditional(Model.ResultFilter == ResultFilter.Unsuccessful, new HtmlString("active"), null)">@Html.GlobalResource("Unsuccessful")</button>
                </div>
                <table id="pulseTestCasesGrid" class="table table-striped table-hover finger">
                    <colgroup>
                        <col />
                        <col style="width: 20%" />
                        <col style="width: 10%" />
                        <col />
                        <col style="width: 10%" />
                        <col style="width: 80px" />
                    </colgroup>
                    <thead>
                        <tr>
                            <th class="result-cell"></th>
                            <th data-sort="@Columns.StartDate"><a href="#">@Html.GlobalResource("TableHeading_Date")</a></th>
                            <th data-sort="@Columns.Duration"><a href="#">@Html.GlobalResource("TableHeading_Duration")</a></th>
                            <th data-sort="@Columns.DetailedResult"><a href="#">@Html.GlobalResource("TableHeading_DetailedResult")</a></th>
                            <th data-sort="@Columns.Result"><a href="#">@Html.GlobalResource("TableHeading_Result")</a></th>
                            <th>@Html.ReportingGlobalResource("TableHeading_Audio", "TableHeading_Visual")</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var result in Model.TestResults.Collection)
                        {
                            <tr>
                                <td class="result-cell @result.Result.ToLower()"></td>
                                <td>@Html.ActionLink(result.ActualStart, "ResultDetails", new { testResultId = result.TestResultId, mediaType = Model.MediaType })</td>
                                <td>@result.Duration</td>
                                <td>@result.DetailedResult</td>
                                <td><span class="label @result.Result.ToLower()">@result.ResultLabel</span></td>
                                <td>
                                    @if (!string.IsNullOrEmpty(result.MediaFile))
                                    {
                                        if (result.RecordingNotAvailable)
                                        {
                                            @RenderDisabledAudioDownloadLink()
                                        }
                                        else
                                        {
                                            <a class="btn js-visual-test" data-test-result-id="@result.TestResultId" title="@Html.GetTitleForMedia(Model.MediaType, result.RecordingPath)" href="@Html.RenderConditional(Model.MediaType == MediaType.Voice, new HtmlString(Url.Action("Recordings", "Media", new { area = "", testResultId = result.TestResultId, resource = result.MediaFile })), new HtmlString("#"))"><i class="@(Model.MediaType == MediaType.Voice ? "icon-download-cloud" : "icon-play icon-custom")"></i></a>
                                        }
                                    }
                                    else
                                    {
                                        <span>@Html.GlobalResource("NotApplicable") </span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <script id="pulsedetail-template-row" type="text/x-tmpl">
                    <tr>
                        <td class="result-cell {%=o.result.toLowerCase() %}"></td>
                        <td><a href="@Url.Action("ResultDetails", new { mediaType = Model.MediaType })&testResultId={%=o.testResultId %}">{%=o.actualStart %}</a></td>
                        <td>{%=o.duration %}</td>
                        <td>{%=coalesce(o.detailedResult,'') %}</td>
                        <td><span class="label {%=o.result.toLowerCase() %}">{%=o.resultLabel %}</span></td>
                        <td>
                            {% if (o.mediaFile != null && o.mediaFile!='') { %}
                                {% if (o.recordingNotAvailable) { %}
                                    @RenderDisabledAudioDownloadLink()
                                {% } else { %}
                                    <a href="@Html.RenderConditional(Model.MediaType == MediaType.Voice, new HtmlString(Url.Action("Recordings", "Media", new { area = "" }) + "/{%= o.testResultId %}/{%= o.mediaFile %}"), new HtmlString("#"))" class="btn js-visual-test" data-test-result-id={%= o.testResultId %}" title="{%= downloadTitle(o.recordingPath) %}"><i class="@(Model.MediaType == MediaType.Voice ? "icon-download-cloud" : "icon-play icon-custom")"></i></a>
                                {% } %}
                            {% } else { %}
                                <span>@Html.GlobalResource("NotApplicable")</span>
                            {% } %}
                        </td>
                    </tr>
                </script>
                @if (Model.MediaType == MediaType.Chat && Model.TestResults.CollectionSize > 0)
                {
                    @Html.Partial("Carousel", new ViewDataDictionary(ViewData) { { "Mode", "MULTIPLE" } })
                }
            </div>
        </div>
    </form>

    <script type="text/javascript">
        $(function() {

            $('.js-export').on('click', function(ev) {
                ev.preventDefault();
                var rf = $('input[name=@Html.NameFor(m => m.ResultFilter)]').val();
                document.location = '@Html.Raw(Url.Action("ExportTestCaseBreakdown", new { type = "REPLACE_TYPE", id = Model.ReportId, name = Model.TestCaseNameEncoded, path = Model.FolderPath, timestamp = Model.ViewLoaded, filter = "REPLACE_FILTER" }))'.replace("REPLACE_TYPE", $(this).data("type")).replace("REPLACE_FILTER", rf);
            });

            $('.radiotabs button').on('click', function(e) {
                $('#pulsedetailform').attr('action', '');
                $('input[name=@Html.NameFor(m => m.ResultFilter)]').remove();
            });

            var popoverHandler = new ReportChartPopover({
                dataUrl: '@Url.Action("TestCaseBreakdownPopoverData", new { id = Model.ReportId })',
                dataUrlPayloadFn: function(label) {
                    return JSON.stringify({
                        reportId: @Model.ReportId,
                        resultType: label,
                        name: '@Model.TestCaseNameEncoded.ToJavascriptSafeString()',
                        path: '@Model.FolderPath.ToJsonSafeStringForJavascript()',
                        timestamp: '@Html.Raw(Model.ViewLoaded)',
                        selectedAccountId: $("#SelectedAccountId").val()
                    });
                },
                enableLinks: false,
                callsLabel: $('#PulseSummaryData').attr('data-calls-label')
            });

            var chart = new ReportChart({
                dataTableName: 'PulseSummaryData',
                chartTableName: 'PulseSummaryDataArea',
                generateColours: false,
                enableLinks: false,
                enablePopovers: true,
                popoverHandler: popoverHandler
            });

            var testCasesGrid = new AjaxGrid({
                dataSourceUrl: '@Url.Action("TestCaseBreakdownList", new { id = Model.ReportId })',
                table: '#pulseTestCasesGrid',
                totalPages: @Model.TestResults.TotalPages,
                collectionSize: @Model.TestResults.CollectionSize,
                pageSize: @Model.TestResults.PageSize,
                pageNumber: @Model.TestResults.PageNumber,
                sortColumn: '@Model.TestResults.SortColumn.ToJavascriptSafeString()',
                sortAscending: @Model.TestResults.SortAscending.ToString().ToLower(),
                rowTemplate: 'pulsedetail-template-row',
                recordLabel: '@Html.Resource("RecordLabelTestResults").ToJavascriptSafeString()',
                requestPreProcessor: function(request) {
                    request.@(Html.NameFor(m => m.ResultFilter)) = $('#@Html.IdFor(m => m.ResultFilter)').val();
                    request.@(Html.NameFor(m => m.ViewLoaded)) = $('#@Html.IdFor(m => m.ViewLoaded)').val();
                    request.@(Html.NameFor(m => m.TestCaseName)) = $('#@Html.IdFor(m => m.TestCaseName)').val();
                    request.@(Html.NameFor(m => m.FolderPath)) = $('#@Html.IdFor(m => m.FolderPath)').val();
                },
                autoClickFirstLink: true
            });

            $("#pulseTestCasesGrid").on("AjaxGrid_PageLoad",
                function() {
                    $('.toolpop, .toolpop-holder', this).toolpop();
                });

        });
    </script>
}